module bcdadder(A,B,Cin,S,Cout);
input  logic [7:0] A,B;      
input  logic Cin;   
output logic [7:0] S;      
output logic Cout;
logic [3:0] sum0, sum1;    
logic c0, c1;              
logic [3:0] corr0, corr1;  

assign {c0, sum0} = A[3:0] + B[3:0] + Cin;
assign corr0 = (sum0 > 4'd9) ? 4'd6 : 4'd0;

assign {c1, sum1} = A[7:4] + B[7:4] + c0;
assign corr1 = (sum1 > 4'd9) ? 4'd6 : 4'd0;

assign S[3:0] = sum0 + corr0;
assign S[7:4] = sum1 + corr1;

assign Cout = (sum1 + corr1 > 4'd9) ? 1'b1 : 1'b0;

endmodule


TestBench code:

module BCD_Adder_tb;

logic [7:0] A, B;   
logic Cin;        
logic [7:0] S;       
logic Cout;        

BCD_Adder uut(A,B,Cin,S,Cout);

initial begin
A = 8'h12; B = 8'h25; Cin = 0;
#10;A = 8'h49; B = 8'h37; Cin = 1;
#10;A = 8'h99; B = 8'h01; Cin = 0;
#10; A = 8'h50; B = 8'h40; Cin = 1;
end
endmodule









