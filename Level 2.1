Design code:
module combinational_b(
    input logic A, B, C, D, E,
    output logic Y
);
    always_comb begin
        Y = (A & B & C) | (A & B & D) | (A & B & E) | (A & C & D) | 
            (A & C & E) | ((A | D | E) & ~B & C & D) | (B & C & E) | 
            (B & D & E) | (C & D & E);
    end
endmodule

Testbench code:
module combinational_b_tb;
    logic A, B, C, D, E;
    logic Y;

    // Instantiate the module
    combinational_b uut (
        .A(A), .B(B), .C(C), .D(D), .E(E), .Y(Y)
    );

    initial begin
        $display("A B C D E | Y");
        $monitor("%b %b %b %b %b | %b", A, B, C, D, E, Y);
        
        // Test all possible combinations
        for (int i = 0; i < 32; i++) begin
            {A, B, C, D, E} = i; #10;
        end
        
        $finish;
    end
endmodule
