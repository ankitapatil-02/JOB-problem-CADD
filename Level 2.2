Design code:
module two_output_function(
    input logic A, B, C, D,
    output logic Y, Z
);
    always_comb begin
        Y = (~A & B & ~C) | (A & D);  // Example logic
        Z = (A & ~B & D) | (~C & ~D); // Example logic
    end
endmodule

Testbench code:
module two_output_function_tb;
    logic A, B, C, D;
    logic Y, Z;

    // Instantiate the module
    two_output_function uut (
        .A(A), .B(B), .C(C), .D(D), .Y(Y), .Z(Z)
    );

    initial begin
        $display("A B C D | Y Z");
        $monitor("%b %b %b %b | %b %b", A, B, C, D, Y, Z);
        
        // Test all possible combinations
        for (int i = 0; i < 16; i++) begin
            {A, B, C, D} = i; #10;
        end
        
        $finish;
    end
endmodule
